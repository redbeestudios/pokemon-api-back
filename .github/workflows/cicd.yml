name: cicd
on: 
    push: 
        branches: 
            - main
jobs:
    run-linters:
      name: Run linters
      runs-on: ubuntu-latest
      steps:
        - name: Check out Git repository
          uses: actions/checkout@v3

        - name: Set up Node.js
          uses: actions/setup-node@v1
          with:
            node-version: 16

        - name: Install Node.js dependencies
          run: yarn install --frozen-lockfile

        - name: ESLint
          run: yarn run lint
        - name: Prettier
          run: yarn run format-check

    run-tests:
      name: Run tests
      needs: run-linters
      runs-on: ubuntu-latest
      steps:
        - name: Check out Git repository
          uses: actions/checkout@v3

        - name: Set up Node.js
          uses: actions/setup-node@v1
          with:
            node-version: 16

        - name: Install Node.js dependencies
          run: yarn install --frozen-lockfile

        - name: Run tests
          run: yarn run test
    # build:
    #   needs: run-tests
    #   runs-on: ubuntu-latest
    #   steps:
    #       - name: Checkout source
    #         uses: actions/checkout@v3
    #       - name: Loging to DockerHub
    #         run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
    #       - name: Build Docker image
    #         run: docker build -t andryredbee/pokemon-api-back .
    #       - name: Push Docker image
    #         run: docker push andryredbee/pokemon-api-back:latest
    build:
      needs: run-tests
      runs-on: ubuntu-latest
      steps:
          - uses: actions/checkout@v3
          - name: Build and push Docker image
            uses: docker/build-push-action@v1
            with:
              username: ${{ secrets.DOCKER_USERNAME }}
              password: ${{ secrets.DOCKER_PASSWORD }}
              repository: andryredbee/pokemon-api-back
              tag_with_sha: true
              tag_with_ref: true
              tags: ${{ github.sha }}

    deploy:
      needs: build
      runs-on: [aws-ec2]
      steps:
          - name: Pull image from dockerhub
            run: docker pull andryredbee/pokemon-api-back:latest
          - name: Delete old container
            run: docker rm -f pokemon-api-back-container
          - name: Run new container
            run: docker run -d --name pokemon-api-back-container -p 5000:5000 andryredbee/pokemon-api-back:latest
            
